{"shell":true,"revision":"45eab609f296e944957cebbce69c65acd066ec13","objects":[{"type":null,"source":"lib/addict/controller.ex:1","object_type":"ModuleObject","moduledoc":" Addict BaseController is used as a base to be extended by controllers if needed.\n BaseController has functions to receive User related requests directly from\n the Phoenix router.  Adds `register/2`, `logout/2` and `login/2` as public functions.\n","module":"Elixir.Addict.BaseController","id":"Addict.BaseController"},{"type":null,"source":"lib/addict/interactors/addict_manager_interactor.ex:1","object_type":"ModuleObject","moduledoc":"Addict BaseManagerInteractor is used as a base manager to be extended if needed.\nIts responsability is to provide simple primitives for\nuser operations.\n","module":"Elixir.Addict.BaseManagerInteractor","id":"Addict.BaseManagerInteractor"},{"type":null,"source":"lib/addict/controller.ex:89","object_type":"ModuleObject","moduledoc":"Default controller used by Addict\n","module":"Elixir.Addict.Controller","id":"Addict.Controller"},{"type":null,"source":"lib/addict/email_gateway.ex:1","object_type":"ModuleObject","moduledoc":"The Addict EmailGateway is a wrapper for sending e-mails with the preferred\nmail library. For now, only Mailgun is supported.\n","module":"Elixir.Addict.EmailGateway","id":"Addict.EmailGateway"},{"type":null,"source":"lib/addict/mailers/mailgun.ex:1","object_type":"ModuleObject","moduledoc":"Wrapper for Mailgun client that handles eventual errors.\n","module":"Elixir.Addict.Mailers.Mailgun","id":"Addict.Mailers.Mailgun"},{"type":null,"source":"lib/addict/interactors/addict_manager_interactor.ex:162","object_type":"ModuleObject","moduledoc":"Default manager used by Addict\n","module":"Elixir.Addict.ManagerInteractor","id":"Addict.ManagerInteractor"},{"type":null,"source":"lib/addict/model.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.Addict.Model","id":"Addict.Model"},{"type":null,"source":"lib/addict/interactors/password_interactor.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.Addict.PasswordInteractor","id":"Addict.PasswordInteractor"},{"type":null,"source":"lib/addict/plugs/authenticated.ex:1","object_type":"ModuleObject","moduledoc":"Authenticated plug can be used to filter actions for users that are\nauthenticated.\n","module":"Elixir.Addict.Plugs.Authenticated","id":"Addict.Plugs.Authenticated"},{"type":null,"source":"lib/addict/repository.ex:1","object_type":"ModuleObject","moduledoc":"Addict Repository is responsible for interacting with the DB on the query\nlevel in order to manipulate user data.\n","module":"Elixir.Addict.Repository","id":"Addict.Repository"},{"type":null,"source":"lib/addict/routes_helper.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.Addict.RoutesHelper","id":"Addict.RoutesHelper"},{"type":null,"source":"lib/addict/interactors/session_interactor.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.Addict.SessionInteractor","id":"Addict.SessionInteractor"},{"type":null,"source":"lib/addict/view.ex:1","object_type":"ModuleObject","moduledoc":" Addict helper view functions to be used on templates\n","module":"Elixir.Addict.View","id":"Addict.View"},{"type":null,"source":"lib/addict/postgres_error_handler.ex:1","object_type":"ModuleObject","moduledoc":"Handles Postgres errors and provides friendly messages on known failures.\n","module":"Elixir.PostgresErrorHandler","id":"PostgresErrorHandler"},{"type":"def","source":"lib/addict/controller.ex:93","signature":[["conn",[],null],["options",[],"Elixir"]],"object_type":"FunctionObject","name":"action","module_id":"Addict.Controller","id":"action/2","doc":null,"arity":2},{"type":"def","source":"lib/addict/controller.ex:93","signature":[["conn",[],null],["action",[],null]],"object_type":"FunctionObject","name":"call","module_id":"Addict.Controller","id":"call/2","doc":false,"arity":2},{"type":"def","source":"lib/addict/controller.ex:93","signature":[["action",[],null]],"object_type":"FunctionObject","name":"init","module_id":"Addict.Controller","id":"init/1","doc":false,"arity":1},{"type":"def","source":"lib/addict/controller.ex:95","signature":[["conn",[],null],["params",[],null]],"object_type":"FunctionObject","name":"login","module_id":"Addict.Controller","id":"login/2","doc":" Entry point for logging users in.\n\n Params needs to be populated with `email` and `password`. It returns `200`\n status code along with the JSON response `{message: \"logged in\", user: %User{}` or `400`\n with `{message: \"invalid email or password\"}`\n\n","arity":2},{"type":"def","source":"lib/addict/controller.ex:95","signature":[["conn",[],null],["",[],"Elixir"]],"object_type":"FunctionObject","name":"logout","module_id":"Addict.Controller","id":"logout/2","doc":" Entry point for logging out users.\n\n Since it only deletes session data, it should always return a JSON response\n in the format `{message: \"logged out\"}` with a `200` status code.\n","arity":2},{"type":"def","source":"lib/addict/controller.ex:95","signature":[["conn",[],null],["params",[],null]],"object_type":"FunctionObject","name":"recover_password","module_id":"Addict.Controller","id":"recover_password/2","doc":" Entry point for asking for a new password.\n\n Params need to be populated with `email`\n","arity":2},{"type":"def","source":"lib/addict/controller.ex:95","signature":[["conn",[],null],["user_params",[],null]],"object_type":"FunctionObject","name":"register","module_id":"Addict.Controller","id":"register/2","doc":"  Entry point for registering new users.\n\n `params` needs to include email, password and username.\n  Returns a JSON response in the format `{message: text, user: %User{}}` with status `201` for\n  successful creation, or `400` for when an error occurs.\n  On success, it also logs the new user in.\n","arity":2},{"type":"def","source":"lib/addict/controller.ex:95","signature":[["conn",[],null],["params",[],null]],"object_type":"FunctionObject","name":"reset_password","module_id":"Addict.Controller","id":"reset_password/2","doc":" Entry point for setting a user's password given the reset token.\n\n Params needed to be populated with `token`, `password` and `password_confirm`\n","arity":2},{"type":"def","source":"lib/addict/email_gateway.ex:13","signature":[["user",[],null],["\\\\",[],[["mailer",[],null],"Elixir.Addict.Mailers.Mailgun"]]],"object_type":"FunctionObject","name":"send_password_recovery_email","module_id":"Addict.EmailGateway","id":"send_password_recovery_email/2","doc":null,"arity":2},{"type":"def","source":"lib/addict/email_gateway.ex:6","signature":[["user",[],null],["\\\\",[],[["mailer",[],null],"Elixir.Addict.Mailers.Mailgun"]]],"object_type":"FunctionObject","name":"send_welcome_email","module_id":"Addict.EmailGateway","id":"send_welcome_email/2","doc":null,"arity":2},{"type":"def","source":"lib/addict/mailers/mailgun.ex:6","signature":[],"object_type":"FunctionObject","name":"conf","module_id":"Addict.Mailers.Mailgun","id":"conf/0","doc":null,"arity":0},{"type":"def","source":"lib/addict/mailers/mailgun.ex:6","signature":[["email",[],null]],"object_type":"FunctionObject","name":"send_email","module_id":"Addict.Mailers.Mailgun","id":"send_email/1","doc":null,"arity":1},{"type":"def","source":"lib/addict/mailers/mailgun.ex:22","signature":[["email",[],null],["from",[],null],["subject",[],null],["html_body",[],null]],"object_type":"FunctionObject","name":"send_email","module_id":"Addict.Mailers.Mailgun","id":"send_email/4","doc":null,"arity":4},{"type":"def","source":"lib/addict/mailers/mailgun.ex:13","signature":[["email",[],null],["from",[],null],["subject",[],null],["html_body",[],null]],"object_type":"FunctionObject","name":"send_email_to_user","module_id":"Addict.Mailers.Mailgun","id":"send_email_to_user/4","doc":"Sends an e-mail to a user. Returns a tuple with `{:ok, result}` on success or\n`{:error, status_error}` on failure.\n","arity":4},{"type":"def","source":"lib/addict/interactors/addict_manager_interactor.ex:167","signature":[["atom1",[],"Elixir"]],"object_type":"FunctionObject","name":"create","module_id":"Addict.ManagerInteractor","id":"create/1","doc":"  Throws exception when user params is invalid.\n","arity":1},{"type":"def","source":"lib/addict/interactors/addict_manager_interactor.ex:167","signature":[["user_params",[],null],["\\\\",[],[["repo",[],null],"Elixir.Addict.Repository"]],["\\\\",[],[["mailer",[],null],"Elixir.Addict.EmailGateway"]],["\\\\",[],[["password_interactor",[],null],"Elixir.Addict.PasswordInteractor"]]],"object_type":"FunctionObject","name":"create","module_id":"Addict.ManagerInteractor","id":"create/4","doc":"  Creates a user on the database and sends the welcoming e-mail via the defined\n  `mailer`.\n\n  Required fields in `user_params` `Dict` are: `email`, `password`, `username`.\n","arity":4},{"type":"def","source":"lib/addict/interactors/addict_manager_interactor.ex:167","signature":[["email",[],null],["\\\\",[],[["repo",[],null],"Elixir.Addict.Repository"]],["\\\\",[],[["mailer",[],null],"Elixir.Addict.EmailGateway"]]],"object_type":"FunctionObject","name":"recover_password","module_id":"Addict.ManagerInteractor","id":"recover_password/3","doc":"  Sends an e-mail to the user with a link to recover the password.\n","arity":3},{"type":"def","source":"lib/addict/interactors/addict_manager_interactor.ex:167","signature":[["recovery_hash",[],null],["password",[],null],["password_confirm",[],null]],"object_type":"FunctionObject","name":"reset_password","module_id":"Addict.ManagerInteractor","id":"reset_password/3","doc":"  Triggers an error when `recovery_hash` is invalid.\n","arity":3},{"type":"def","source":"lib/addict/interactors/addict_manager_interactor.ex:167","signature":[["recovery_hash",[],null],["password",[],null],["password_confirm",[],null],["\\\\",[],[["repo",[],null],"Elixir.Addict.Repository"]],["\\\\",[],[["password_interactor",[],null],"Elixir.Addict.PasswordInteractor"]]],"object_type":"FunctionObject","name":"reset_password","module_id":"Addict.ManagerInteractor","id":"reset_password/5","doc":"  Resets the password for the user with the given `recovery_hash`.\n","arity":5},{"type":"def","source":"lib/addict/interactors/addict_manager_interactor.ex:167","signature":[["email",[],null],["password",[],null],["\\\\",[],[["repo",[],null],"Elixir.Addict.Repository"]],["\\\\",[],[["password_interactor",[],null],"Elixir.Addict.PasswordInteractor"]]],"object_type":"FunctionObject","name":"verify_password","module_id":"Addict.ManagerInteractor","id":"verify_password/4","doc":"  Verifies if the provided `password` is the same as the `password` for the user\n  associated with the given `email`.\n","arity":4},{"type":"def","source":"lib/addict/model.ex:20","signature":[["user_params",[],null]],"object_type":"FunctionObject","name":"validate_new_model","module_id":"Addict.Model","id":"validate_new_model/1","doc":"Creates a changeset based on the `model` and `params`.\n\nIf no params are provided, an invalid changeset is returned\nwith no validation performed.\n","arity":1},{"type":"def","source":"lib/addict/interactors/password_interactor.ex:8","signature":[["password",[],null]],"object_type":"FunctionObject","name":"generate_hash","module_id":"Addict.PasswordInteractor","id":"generate_hash/1","doc":null,"arity":1},{"type":"def","source":"lib/addict/interactors/password_interactor.ex:4","signature":[],"object_type":"FunctionObject","name":"generate_random_hash","module_id":"Addict.PasswordInteractor","id":"generate_random_hash/0","doc":null,"arity":0},{"type":"def","source":"lib/addict/interactors/password_interactor.ex:12","signature":[["hash",[],null],["password",[],null]],"object_type":"FunctionObject","name":"verify_credentials","module_id":"Addict.PasswordInteractor","id":"verify_credentials/2","doc":null,"arity":2},{"type":"def","source":"lib/addict/plugs/authenticated.ex:23","signature":[["conn",[],null],["",[],"Elixir"]],"object_type":"FunctionObject","name":"call","module_id":"Addict.Plugs.Authenticated","id":"call/2","doc":"Call represents the use of the plug itself.\n\nWhen called, it will assign `current_user` to `conn`, so it is\npossible to always retrieve the user via `conn.assigns.current_user`.\n\nIn case the user is not logged in, it will redirect the request to\nthe Application :addict :not_logged_in_url page. If none is defined, it will\nredirect to `/error`.\n","arity":2},{"type":"def","source":"lib/addict/plugs/authenticated.ex:8","signature":[["options",[],null]],"object_type":"FunctionObject","name":"init","module_id":"Addict.Plugs.Authenticated","id":"init/1","doc":null,"arity":1},{"type":"def","source":"lib/addict/plugs/authenticated.ex:33","signature":[["user_session",[],null]],"object_type":"FunctionObject","name":"is_logged_in","module_id":"Addict.Plugs.Authenticated","id":"is_logged_in/1","doc":null,"arity":1},{"type":"def","source":"lib/addict/plugs/authenticated.ex:40","signature":[],"object_type":"FunctionObject","name":"not_logged_in_url","module_id":"Addict.Plugs.Authenticated","id":"not_logged_in_url/0","doc":null,"arity":0},{"type":"def","source":"lib/addict/repository.ex:29","signature":[["user",[],null],["hash",[],null]],"object_type":"FunctionObject","name":"add_recovery_hash","module_id":"Addict.Repository","id":"add_recovery_hash/2","doc":"Adds a recovery hash to the user.\n\nIt either returns a tuple with `{:ok, user}` or, in case an error\nhappens, a tuple with `{:error, error_message}`\n","arity":2},{"type":"def","source":"lib/addict/repository.ex:56","signature":[["user",[],null],["hash",[],null]],"object_type":"FunctionObject","name":"change_password","module_id":"Addict.Repository","id":"change_password/2","doc":"Changes the hashed password for the target user.\n\nIt either returns a tuple with `{:ok, user}` or, in case an error\nhappens, a tuple with `{:error, error_message}`\n","arity":2},{"type":"def","source":"lib/addict/repository.ex:19","signature":[["user_params",[],null]],"object_type":"FunctionObject","name":"create","module_id":"Addict.Repository","id":"create/1","doc":"Creates a new user on the database with the given parameters.\n\nIt either returns a tuple with `{:ok, user}` or, in case an error\nhappens, a tuple with `{:error, error_message}`\n","arity":1},{"type":"def","source":"lib/addict/repository.ex:72","signature":[["email",[],null]],"object_type":"FunctionObject","name":"find_by_email","module_id":"Addict.Repository","id":"find_by_email/1","doc":"Retrieves a single user from the database based on the user's e-mail.\n\nIt either returns the `user` or, in case an error occurs, a tuple with\n`{:error, error_message}`. If no user exists, `nil` will be returned.\n","arity":1},{"type":"def","source":"lib/addict/repository.ex:87","signature":[["hash",[],null]],"object_type":"FunctionObject","name":"find_by_recovery_hash","module_id":"Addict.Repository","id":"find_by_recovery_hash/1","doc":"Retrieves a single user from the database based on the user's recovery hash.\n\nIt either returns the `user` or, in case an error occurs, a tuple with\n`{:error, error_message}`. If no user exists, `nil` will be returned.\n","arity":1},{"type":"defmacro","source":"lib/addict/routes_helper.ex:8","signature":[["atom1",[],"Elixir"],["\\\\",[],[["options",[],null],["%{}",[["line",8]],[]]]]],"object_type":"FunctionObject","name":"addict","module_id":"Addict.RoutesHelper","id":"addict/2","doc":null,"arity":2},{"type":"def","source":"lib/addict/interactors/session_interactor.ex:18","signature":[["arg1",[],"Elixir"],["conn",[],null]],"object_type":"FunctionObject","name":"login","module_id":"Addict.SessionInteractor","id":"login/2","doc":null,"arity":2},{"type":"def","source":"lib/addict/interactors/session_interactor.ex:31","signature":[["conn",[],null]],"object_type":"FunctionObject","name":"logout","module_id":"Addict.SessionInteractor","id":"logout/1","doc":null,"arity":1},{"type":"def","source":"lib/addict/interactors/session_interactor.ex:39","signature":[["arg1",[],"Elixir"],["conn",[],null]],"object_type":"FunctionObject","name":"password_recover","module_id":"Addict.SessionInteractor","id":"password_recover/2","doc":null,"arity":2},{"type":"def","source":"lib/addict/interactors/session_interactor.ex:51","signature":[["arg1",[],"Elixir"],["conn",[],null]],"object_type":"FunctionObject","name":"password_reset","module_id":"Addict.SessionInteractor","id":"password_reset/2","doc":null,"arity":2},{"type":"def","source":"lib/addict/interactors/session_interactor.ex:4","signature":[["arg1",[],"Elixir"],["conn",[],null]],"object_type":"FunctionObject","name":"register","module_id":"Addict.SessionInteractor","id":"register/2","doc":null,"arity":2},{"type":"def","source":"lib/addict/view.ex:19","signature":[["conn",[],null],["prop",[],null]],"object_type":"FunctionObject","name":"get_user","module_id":"Addict.View","id":"get_user/2","doc":" gets user model properties\n","arity":2},{"type":"def","source":"lib/addict/view.ex:12","signature":[["conn",[],null]],"object_type":"FunctionObject","name":"logged_in","module_id":"Addict.View","id":"logged_in/1","doc":" checks if user is logged in, returns true if so,\n  and false if not\n","arity":1},{"type":"def","source":"lib/addict/postgres_error_handler.ex:10","signature":[["arg1",[],"Elixir"],["postgres_error",[],null]],"object_type":"FunctionObject","name":"handle_error","module_id":"PostgresErrorHandler","id":"handle_error/2","doc":"Handles generic errors.\n","arity":2}],"language":"elixir","git_repo_url":"https://github.com/trenpixster/addict.git","client_version":"0.3.3","client_name":"inch_ex","branch_name":"master","args":[]}